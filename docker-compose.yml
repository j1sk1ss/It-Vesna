version: '3.3'

services:

  # Front container (node + npm)
  front:
    image: ghcr.io/j1sk1ss/vesna-front-env:0.1v
    ports:
      - 80:3000
    depends_on:
      - pages-service
      - users-db-service
    volumes:
      - type: bind
        source: ./front
        target: /var/www/it-vesna/body
    command: npm start --prefix body/site-body


  # Back container (Python + libs)
  pages-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.3v
    ports:
      - 27000:5000
    command: python body/service.py
    depends_on:
      - api-service
    volumes:
      - type: bind
        source: ./back/pages_service
        target: /var/www/it-vesna/server/body
      - type: bind
        source: ./back/data
        target: /var/www/it-vesna/server/data


  # API container (Python + libs)
  api-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.3v
    ports:
      - 27001:5000
    command: python body/service.py
    depends_on:
      - users-db
      - mail-service
      - crypto-service
      - users-db-service
    volumes:
      - type: bind
        source: ./back/api_service
        target: /var/www/it-vesna/server/body
      - type: bind
        source: ./back/data
        target: /var/www/it-vesna/server/data


  # API container (Python + libs)
  file-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.3v
    ports:
      - 27013:5000
    command: python body/service.py
    depends_on:
      - users-db
      - mail-service
      - crypto-service
      - users-db-service
    volumes:
      - type: bind
        source: ./back/file_service
        target: /var/www/it-vesna/server/body
      - type: bind
        source: ./back/data
        target: /var/www/it-vesna/server/data


  # Mail container
  mail-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 27002:5000
    command: python service.py
    depends_on:
      - users-db
    volumes:
      - type: bind
        source: ./back/mail_service
        target: /var/www/it-vesna/server


  # Crypto container
  crypto-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 27003:5000
    command: python service.py
    depends_on:
      - users-db
    volumes:
      - type: bind
        source: ./back/crypto_service
        target: /var/www/it-vesna/server


  # =================
  # USERS MICROSERVICE

  users-db-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 27004:5000
    command: python service.py
    depends_on:
      - users-db
    volumes:
      - type: bind
        source: ./back/users_service
        target: /var/www/it-vesna/server

  users-db:
    image: postgres
    ports:
      - 27005:5432
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: it_vesna_bd_pass
      POSTGRES_USER: root
      POSTGRES_DB: it-vesna-users-db
    volumes:
      - ./back/users_service/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./back/data/db_backups/users_db:/var/lib/postgresql/data


  # =================
  # POSTS MICROSERVICE

  posts-db-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 27006:5000
    command: python service.py
    depends_on:
      - posts-db
    volumes:
      - type: bind
        source: ./back/posts_service
        target: /var/www/it-vesna/server

  posts-db:
    image: postgres
    ports:
      - 27007:5432
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: it_vesna_bd_pass
      POSTGRES_USER: root
      POSTGRES_DB: it-vesna-posts-db
    volumes:
      - ./back/posts_service/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./back/data/db_backups/posts_db:/var/lib/postgresql/data


  # =================
  # REQUESTS MICROSERVICE

  requests-db-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 27008:5000
    command: python service.py
    depends_on:
      - requests-db
    volumes:
      - type: bind
        source: ./back/requests_service
        target: /var/www/it-vesna/server

  requests-db:
    image: postgres
    ports:
      - 27009:5432
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: it_vesna_bd_pass
      POSTGRES_USER: root
      POSTGRES_DB: it-vesna-requests-db
    volumes:
      - ./back/requests_service/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./back/data/db_backups/req_db:/var/lib/postgresql/data


  # =================
  # NOMINATIONS MICROSERVICE

  nom-db-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 27010:5000
    command: python service.py
    depends_on:
      - requests-db
    volumes:
      - type: bind
        source: ./back/nomination_service
        target: /var/www/it-vesna/server

  nom-db:
    image: postgres
    ports:
      - 27011:5432
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: it_vesna_bd_pass
      POSTGRES_USER: root
      POSTGRES_DB: it-vesna-nom-db
    volumes:
      - ./back/nomination_service/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./back/data/db_backups/nom_db:/var/lib/postgresql/data


  # Data base GUI in web
  adminer:
    image: adminer
    restart: always
    ports:
      - 27012:8080
    depends_on:
      - users-db


networks:
  default:
    name: it-vesna-network