version: '3.3'

services:
  # Front container (node + npm)
  front:
    image: ghcr.io/j1sk1ss/vesna-front-env:0.1v
    ports:
      - 80:3000
    depends_on:
      - pages-service
      - db-service
    volumes:
      - type: bind
        source: ./front
        target: /var/www/it-vesna/body
    command: npm start --prefix body/site-body

  # Back container (Python + libs)
  pages-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 5400:5400
    command: python main.py
    depends_on:
      - api-service
    volumes:
      - type: bind
        source: ./back/pages_service
        target: /var/www/it-vesna/server

  # API container (Python + libs)
  api-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 5000:5000
    command: python api.py
    depends_on:
      - db
      - mail-service
      - crypto-service
      - db-service
    volumes:
      - type: bind
        source: ./back/api_service
        target: /var/www/it-vesna/server

  # Mail container
  mail-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 5200:5200
    command: python mailing.py
    depends_on:
      - db
    volumes:
      - type: bind
        source: ./back/mail_service
        target: /var/www/it-vesna/server

  # Crypto container
  crypto-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 5300:5300
    command: python crypto.py
    depends_on:
      - db
    volumes:
      - type: bind
        source: ./back/crypto_service
        target: /var/www/it-vesna/server

  # DB server container (Python + Libs)
  db-service:
    image: ghcr.io/j1sk1ss/vesna-back-env:0.2v
    ports:
      - 5100:5100
    command: python db.py
    depends_on:
      - db
    volumes:
      - type: bind
        source: ./back/db_service
        target: /var/www/it-vesna/server

  # Data base
  db:
    image: postgres
    ports:
      - 5432:5432
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: 28072003
      POSTGRES_USER: root
      POSTGRES_DB: it-vesna-db
    volumes:
      - ./db_service/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Data base GUI in web
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db

volumes:
  db:

networks:
  default:
    name: it-vesna-network